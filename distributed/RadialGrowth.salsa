module distributed;

import java.io.*;
import java.util.*;

//Kevin De Leon
//Rasika Ekhalikar

//java -cp salsa1.1.5.jar:. salsac.SalsaCompiler concurrent/RadialGrowth.salsa
//javac -cp salsa1.1.5.jar:. concurrent/*.java
//java -cp salsa1.1.5.jar:. concurrent.RadialGrowth config.tsv

behavior RadialGrowth{

 	LinkedList nodes = new LinkedList();

	void act(String[] args){

		String filename = args[1];
		// String uan= args[2];
		// String[] parts = uan.split(":");
		// System.out.println(parts[0]);
		try{ 
			BufferedReader reader = new BufferedReader(new FileReader(args[1])); 
			String line;
			while((line = reader.readLine()) != null){
				System.out.println(line);
				String tmp= line;
				String[] inputs = tmp.split("\t");
				String host=inputs[1];
				String port = inputs[2];
				Node newNode = (Node)Node.getReferenceByName(new UAN(host));

				nodes.add(newNode);

			}

			reader.close();

		}catch(IOException ioe){
			standardError<-println("[error] Can't open the file "+filename+" for reading.");
			return;
		}

		// System.out.println(nodes.size());


		// ListIterator iter = nodes.listIterator();
		for(int i=0;i<nodes.size()-1;i++){
			nodes.get(i+1)<-setLeft(nodes.get(i));
		}
		nodes.getFirst()<-setLeft(nodes.get(nodes.size()-1));

		for(int i=1;i<nodes.size();i++){
			nodes.get(i)<-setRight(nodes.get(i-1));
		}
		nodes.getFirst()<-setRight(nodes.get(nodes.size()-1));
		
		for(int i=0;i<nodes.size();i++){
			nodes.get(i)<-setSize(nodes.size());
		}

		//beginElection();

	}

	void beginElection(){
		(nodes.getFirst())<-startElection(0,0);
	}

}


